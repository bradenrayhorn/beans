// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	beans "github.com/bradenrayhorn/beans/beans"

	mock "github.com/stretchr/testify/mock"
)

// TransactionRepository is an autogenerated mock type for the TransactionRepository type
type TransactionRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, id, accountID, amount, date, notes
func (_m *TransactionRepository) Create(ctx context.Context, id beans.ID, accountID beans.ID, amount beans.Amount, date beans.Date, notes beans.TransactionNotes) error {
	ret := _m.Called(ctx, id, accountID, amount, date, notes)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, beans.ID, beans.ID, beans.Amount, beans.Date, beans.TransactionNotes) error); ok {
		r0 = rf(ctx, id, accountID, amount, date, notes)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTransactionRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransactionRepository creates a new instance of TransactionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransactionRepository(t mockConstructorTestingTNewTransactionRepository) *TransactionRepository {
	mock := &TransactionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
